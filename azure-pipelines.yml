# Testing CICD Pipeline for Testing
trigger:
  branches:
    include:
      #- main
      #- master
      - release/*

pool:
  vmImage: "ubuntu-latest"
  container: shiftleft/sast-scan:latest


#variables:
#  - group: angular-app-vars

stages:
  - stage: 'PreDeployment'
    displayName: 'Security Code Analysis'
    jobs:
      - job: risk_report
        displayName: 'Risk Report'
        pool:
          vmImage: "ubuntu-latest"
        steps:
        - template: ci/WhiteSource.yml             
      
      - job: 'Snyk_Scan'
        displayName: 'Snyk Report'
        steps:
        - template: ci/Snyk.yml
  
      - job: 'WebGoat_Test'
        displayName: 'WebGoat Stats'
        steps:
        - template: ci/WebGoat.yml
      
      - job: 'lint_tests'
        displayName: 'super-linter validation'
        steps:
        - template: ci/linter.yml
  
  - stage: 'Build_Publish_Artifact'
    displayName: 'Build The Artifact'
    jobs:
      - job: 'Build_Publish_Artifact'
        displayName: 'Building The Artifact'
        steps:
          #- task: SonarCloudPrepare@1
            
            
          
          - task: NodeTool@0
            inputs:
              versionSpec: '10.x'
              #sonarQubeRunAnalysis: true
            displayName: 'Install Node.js'
          - script: |
              npm install --verbose
              #npm run lint
              #npm run build:war
      
      - job: 'OWASP_Scan'
        displayName: 'OWASP Dependency Check scan of third-party dependencies'
        steps:
        - template: ci/owasp.yml
