# Testing CICD Pipeline for Testing
trigger:
  branches:
    include:
      #- main
      #- master
      - release/*

pool:
  vmImage: "ubuntu-latest"
  container: shiftleft/sast-scan:latest


variables:
#  - group: angular-app-vars
  webappname : 'angularApp'

stages:
  - stage: 'PreDeployment'
    displayName: 'Security Code Analysis'
    jobs:
      - job: risk_report
        displayName: 'Risk Report'
        pool:
          vmImage: "ubuntu-latest"
        steps:
        - template: ci/WhiteSource.yml             
      
      - job: 'Snyk_Scan'
        displayName: 'Snyk Report'
        steps:
        - template: ci/Snyk.yml
  
      - job: 'WebGoat_Test'
        displayName: 'WebGoat Stats'
        steps:
        - template: ci/WebGoat.yml
      
      - job: 'lint_tests'
        displayName: 'super-linter validation'
        steps:
        - template: ci/linter.yml
  
  - stage: 'Build_Publish_Artifact'
    displayName: 'Building The Artifact'
    jobs:
      - job: 'Building_Artifact'
        displayName: 'Building The Artifact'
        steps:
        - template: ci/npm-ci.yml
      
      #- job: 'OWASP_Scan'
      #  displayName: 'OWASP Dependency Check scan of third-party dependencies'
      #  steps:
      #  - template: ci/owasp.yml
  
  - stage: 'Post_Build_Scan'
    displayName: 'Post Build Scan'
    jobs:
      - job: 'OWASP_Scan'
        displayName: 'OWASP Dependency Check scan of third-party dependencies'
        steps:
        - template: ci/owasp.yml 
  
  - stage: 'Deploy_to_Dev'
    displayName: 'Dev stage'
    dependsOn: 'Build_Publish_Artifact'
    condition: succeeded('Build_Publish_Artifact')
    jobs:
    - deployment: 'Deploy_Artifact_To_Dev'
      displayName: 'Deploy_Artifact To Dev'
      environment: 'Dev'
      pool: 
        vmImage: 'ubuntu-latest'
      strategy:
        runOnce:
          deploy:
             steps:
             - template: cd/dev.yml
