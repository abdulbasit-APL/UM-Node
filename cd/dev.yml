          steps:
          - task: DownloadPipelineArtifact@1
            displayName: 'Download Pipeline Artifact'
            #download: 'current
            inputs:
              targetPath: $(Build.ArtifactStagingDirectory)/**
              ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
                  #artifactName: 'prod'
                   echo "Source branch 'main' is allowed to deploy on Dev Env"
              ${{ else }}:
                  #artifactName: 'dev'
                   echo "Source branch '$(Build.SourceBranchName)' is not allowed to deploy code on Dev Env"
              runVersion: 'latest'
              downloadPath: '$(System.DefaultWorkingDirectory)'
              #targetPath: '$(System.DefaultWorkingDirectory)/$(webappname).zip'
              #targetPath: '$(Pipeline.Workspace)'
              #targetPath: '$(System.ArtifactsDirectory)/** ${{ if eq(variables['Build.SourceBranchName'], 'main') }}: artifactName: 'prod' ${{ else }}: artifactName: 'dev''
              #targetPath: '$(System.ArtifactsDirectory)'
              #buildType: 'current'
          - script: |
              pwd
              ls -al
              echo "Starting deployment on Dev Environment"
              #curl -T '$(output.directory)/$(artifact.name)' 'https://$(server.dev.user):$(server.dev.password)@$(server.dev.host)/manager/text/deploy?path=/$(artifact.azure.name)&update=true'
              #displayName: 'Deploying app'
              echo "####################Copying Files to Application Directory########################"
              #sudo mkdir "/usr/local/src/app-$(date +"%d-%m-%Y")"
              sudo mkdir /usr/local/src/app-$(date +"%d-%m-%Y")
              sudo cp -rf '$(System.DefaultWorkingDirectory)/drop/$(webappname).zip' /usr/local/src/app-$(date +"%d-%m-%Y")
              ls -al /usr/local/src/app-$(date +"%d-%m-%Y")

          #- task: AzureWebApp@1
          #  inputs:
          #    #azureSubscription: '$(subscription)'
          #    #azureSubscription: 'korio-platform-dev'
          #    appType: 'webApp'
          #    appName: '$(webappname)'
          #    package: '$(System.DefaultWorkingDirectory)/$(webappname).zip'
          #    #customWebConfig: '-Handler iisnode -NodeStartFile index.js -appType node'
          #    deploymentMethod: 'zipDeploy'
